<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="https://etherio.github.io/cdn/normalize/normalize.css">
    <link rel="stylesheet" href="https://etherio.github.io/cdn/milligram/milligram.css">
</head>

<body>
    <div class="container">
        <h2>Welcome back,
            <b><%= fullname %>!</b>
        </h2>

        <button class="button" onclick="account.delete()">Delete this account</button>
        <a class="button button-outline" href="/users/logout">Logout</a>
    </div>

    <% if (permission >= 8) { %>
    <div class="container">
        <ul id="list-users"></ul>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/eruda"></script>
    <script>
        window.onload = () => eruda.init();
        fetch("/users")
            .then(res => {
                if (res.status !== 200) {
                    res.text().then(res => {
                        throw res;
                     });
                }
                return res.json();
            })
            .then(users => {
                users.forEach(user => {
                    listUser(user);
                })
            });

        function listUser({ permission, _id, username, fullname, email }) {
            let li = document.createElement("li");
            let del = document.createElement("button");

            li.setAttribute('data-id', _id);
        
            li.innerHTML = `<a href="mailto:${email}">${fullname}</a> (${username})`;

            del.onclick = () => {
                account.delete(_id);
            };
            del.innerText = 'Delete';
            li.appendChild(del);

            document.getElementById("list-users").appendChild(li);
        }
    </script>
    <% } %>
    <script>
        const account = {
            async delete(id) {
                if (!confirm('Are you sure to delete this account? This cannot be undone.')) {
                    return;
                }
                let url = '/users';

                if (id) url += '/' + id;

                let response = await fetch(url, {
                    method: "DELETE",
                    headers: {
                        cookie: document.cookie
                    }
                });

                if (response.status === 202) {
                    return location.reload();
                }

                response = await response.text();

                alert(response);
            }
        }

        window.app = app;
    </script>
</body>

</html>
